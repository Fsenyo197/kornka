"""Initial migration

Revision ID: 2e62be648270
Revises: 
Create Date: 2025-03-08 21:56:56.256758

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2e62be648270'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('trade_pairs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('asset_type', sa.Enum('FOREX', 'CRYPTO', 'STOCK', name='asset_type_enum'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('risk_settings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('pair_id', sa.UUID(), nullable=True),
    sa.Column('default_sl', sa.Float(), nullable=True),
    sa.Column('default_tp', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['pair_id'], ['trade_pairs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trades',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('pair_id', sa.UUID(), nullable=False),
    sa.Column('action', sa.Enum('BUY', 'SELL', name='trade_action_enum'), nullable=False),
    sa.Column('lot_size', sa.Float(), nullable=False),
    sa.Column('entry_price', sa.Float(), nullable=False),
    sa.Column('sl_price', sa.Float(), nullable=True),
    sa.Column('tp_price', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('OPEN', 'CLOSED', 'MODIFIED', name='trade_status_enum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pair_id'], ['trade_pairs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trade_journal',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('trade_id', sa.UUID(), nullable=False),
    sa.Column('profit_loss', sa.Float(), nullable=False),
    sa.Column('risk_reward_ratio', sa.Float(), nullable=False),
    sa.Column('trade_notes', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['trade_id'], ['trades.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('trade_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trade_journal')
    op.drop_table('trades')
    op.drop_table('risk_settings')
    op.drop_table('users')
    op.drop_table('trade_pairs')
    # ### end Alembic commands ###
